name: Better DB Release

on:
  push:
    tags:
      - 'better-db-v*'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    # Only run on fork, not on upstream better-auth repo
    if: github.repository != 'better-auth/better-auth'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.x

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'

      - run: pnpm install

      - name: Build packages
        run: |
          # Build better-auth first (required dependency)
          pnpm build --filter better-auth --filter "@better-auth/*" --force
          
          # Build better-db packages explicitly (force rebuild, no cache)
          pnpm build --filter "@better-db/*" --force
          
          # Verify dist folders exist
          echo "Checking dist folders..."
          ls -la packages/better-db/core/dist/ || echo "❌ core/dist missing!"
          ls -la packages/better-db/cli/dist/ || echo "❌ cli/dist missing!"
          ls -la packages/better-db/plugins/dist/ || echo "❌ plugins/dist missing!"

      - name: Determine npm tag
        id: determine_npm_tag
        shell: bash
        run: |
          # Extract version from tag (works for both tag push and release events)
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
          else
            TAG="${GITHUB_REF#refs/tags/}"
          fi
          
          # Only process better-db tags
          if [[ ! "$TAG" =~ ^better-db-v ]]; then
            echo "Not a better-db release tag, skipping..."
            exit 0
          fi
          
          # Remove better-db- prefix
          VERSION="${TAG#better-db-}"
          
          if [[ "$VERSION" =~ -(next|canary|beta|rc|alpha) ]]; then
            # Extract pre-release tag (e.g., beta, rc, alpha)
            NPM_TAG=${BASH_REMATCH[1]}
          else
            # Stable release
            NPM_TAG="latest"
          fi
          echo "npm_tag=$NPM_TAG" >> $GITHUB_OUTPUT
          echo "Using npm tag: $NPM_TAG for version: $VERSION"

      - name: Copy README to each package
        run: |
          # Copy main better-db README to each package for npm
          cd packages/better-db
          for dir in core cli plugins adapter-*; do
            if [ -d "$dir" ]; then
              echo "Copying README to @better-db/${dir}..."
              cp README.md "$dir/"
            fi
          done

      - name: Verify package contents before publishing
        run: |
          cd packages/better-db
          for dir in core cli plugins adapter-*; do
            if [ -d "$dir" ]; then
              echo "=== Checking @better-db/${dir} ==="
              cd "$dir"
              echo "Files to be published:"
              npm pack --dry-run
              echo ""
              cd ..
            fi
          done

      - name: Publish @better-db/* packages to npm
        run: |
          # Only publish better-db packages
          cd packages/better-db
          for dir in core cli plugins adapter-*; do
            if [ -d "$dir" ]; then
              echo "Publishing @better-db/${dir}..."
              cd "$dir"
              pnpm publish --access public --no-git-checks --tag ${{ steps.determine_npm_tag.outputs.npm_tag }}
              cd ..
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

